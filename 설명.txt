1. 라이브러리와 프레임워크의 차이
    - 라이브러리 : 기능의 집합 → 개발자가 능동적으로 기능을 찾아서 사용
    - 프레임워크 : 기능의 집합 + 사용법
        → 개발자가 작성한 코드를 사용법에 따라 프레임워크에 위탁해서 사용


2. 스프링을 왜 사용할까?
- Inversion of Control (IOC, 제어 역전) : 프레임워크가 코드 흐름을 주도
- Aspect Oriented Programming (AOP) : 횡단관심을 처리
- 횡단관심 : 여기 저기 반복적으로 나타나는 기능 (EX. 로그인)
    ㄴ 횡단관심을 분리 구현 → 필요한 곳에 주입해서 사용할 수 있게 한다
        ㄴ EX. 로그인 기능을 1번만 만들고 로그인 확인에 필요한 메소드에
               @Secured() 어노테이션을 걸면 스프링이 로그인 여부를
               확인 후 비로그인이면 로그인 페이지로 보내버린다

3. 초보자가 처음 스프링을 사용할 때 주의할 점
- 프로젝트를 생성할 때 패키지를 지정하면 스프링 기능 그 하위 패키지에 대해서만 동작함
    ㄴ ex. com.example.demo 패키지인 경우
          하위 패키지인 com.example.demo.controller 에서는 @Controller 와 같은
          스프링 어노테이션이 동작함
          com.example.demo1.controller 에서는 스프링 어노테이션이 동작하지 않음
- 패키지가 다르더라도 클래스 이름은 겹치면 안된다
    ㄴ ex. com.example.com.controller1 밑에 SampleController 가 있다면
           com.example.com.controller2 밑에도 SampleController 가 있으면 안된다